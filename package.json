{
  "name": "boilerplate-nestjs-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "remove:node:module": "rimraf node_modules",
    "remove:test:report": "rimraf coverage && rimraf report",
    "prepare:husky": "husky install",
    "sudo:permission": "cross-env TZ=Asia/Bangkok NODE_ENV=local ts-node ./src/common/scripts/sudo-permission.script.ts",
    "prebuild": "cross-env TZ=Asia/Bangkok NODE_ENV=local ts-node ./src/common/scripts/pre-build.script.ts",
    "copy:assets": "cpx \"src/public/assets/**/*\" dist/public/assets",
    "build": "cross-env TZ=Asia/Bangkok NODE_ENV=local ts-node ./src/common/scripts/build.script.ts",
    "build:zip": "cross-env yarn run build && bestzip deploy.zip dist/*",
    "format": "prettier --write \"src/**/*.ts\"",
    "start": "nest start",
    "start:local:trace": "cross-env NODE_OPTIONS=--trace-deprecation TZ=Asia/Bangkok NODE_ENV=local nest start --watch",
    "start:local:disable:warning": "cross-env TZ=Asia/Bangkok NODE_ENV=local node --no-warnings node_modules/.bin/nest start --watch",
    "start:local": "cross-env TZ=Asia/Bangkok NODE_ENV=local nest start --watch",
    "start:debug": "cross-env TZ=Asia/Bangkok NODE_ENV=debug nest start --debug --watch",
    "start:dev": "cross-env TZ=Asia/Bangkok NODE_ENV=dev yarn run build && cross-env NODE_ENV=dev node dist/src/main.js",
    "start:uat": "cross-env TZ=Asia/Bangkok NODE_ENV=uat yarn run build && cross-env NODE_ENV=uat node dist/src/main.js",
    "start:prod": "cross-env TZ=Asia/Bangkok NODE_ENV=prod yarn run build && cross-env NODE_ENV=prod node dist/src/main.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix --max-warnings=0",
    "test": "jest --verbose --runInBand",
    "test:watch": "jest --watch",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:ci:cov": "cross-env FORCE_COLOR=false NODE_ENV=test jest --silent --runInBand --coverage --no-cache --config ./test/jest-ci.json",
    "test:e2e:cov": "cross-env NODE_ENV=test jest --verbose --coverage --no-cache --config ./test/jest-e2e.json",
    "test:unit:cov": "cross-env NODE_ENV=test jest --no-colors --verbose --coverage --no-cache --color false --no-progress --config ./test/jest-unit.json",
    "test:e2e": "cross-env NODE_ENV=test jest --verbose --watch --no-cache --runInBand --config ./test/jest-e2e.json",
    "test:unit": "cross-env NODE_ENV=test jest --verbose --watch --no-cache --config ./test/jest-unit.json",
    "test:report": "cross-env NODE_ENV=test jest --verbose --watch --no-cache --runInBand --config ./test/jest-report.json",
    "test:e2e:report": "cross-env NODE_ENV=test jest --verbose --watch --no-cache --runInBand --config ./test/jest-e2e-report.json",
    "test:unit:report": "cross-env NODE_ENV=test jest --verbose --watch --no-cache --config ./test/jest-unit-report.json",
    "husky:test:unit": "cross-env NODE_ENV=test jest --verbose --no-cache --config ./test/jest-unit.json",
    "db:local:create": "docker-compose -f ./docker/development/db/docker-compose.local.yml up",
    "db:local:remove": "docker-compose -f ./docker/development/db/docker-compose.local.yml down",
    "db:local:start": "docker-compose -f ./docker/development/db/docker-compose.local.yml start",
    "db:local:stop": "docker-compose -f ./docker/development/db/docker-compose.local.yml stop",
    "db:local:run": "yarn run db:test:stop && yarn run db:local:start",
    "db:local:backup": "cross-env NODE_ENV=local ts-node ./src/common/scripts/db/dump-db.script.ts",
    "db:local:restore": "cross-env NODE_ENV=local ts-node ./src/common/scripts/db/restore-db.script.ts",
    "db:test:create": "docker-compose -f ./docker/development/db/docker-compose.test.yml up",
    "db:test:remove": "docker-compose -f ./docker/development/db/docker-compose.test.yml down",
    "db:test:start": "docker-compose -f ./docker/development/db/docker-compose.test.yml start",
    "db:test:stop": "docker-compose -f ./docker/development/db/docker-compose.test.yml stop",
    "db:test:run": "yarn run db:local:stop && yarn run db:test:start",
    "db:test:backup": "cross-env NODE_ENV=test ts-node ./src/common/scripts/db/dump-db.script.ts",
    "db:test:restore": "cross-env NODE_ENV=test ts-node ./src/common/scripts/db/restore-db.script.ts",
    "db:dev:backup": "cross-env NODE_ENV=dev ts-node ./src/common/scripts/db/dump-db.script.ts",
    "db:dev:restore": "cross-env NODE_ENV=dev ts-node ./src/common/scripts/db/restore-db.script.ts",
    "db:uat:backup": "cross-env NODE_ENV=uat ts-node ./src/common/scripts/db/dump-db.script.ts",
    "db:uat:restore": "cross-env NODE_ENV=uat ts-node ./src/common/scripts/db/restore-db.script.ts",
    "db:prod:backup": "cross-env NODE_ENV=prod ts-node ./src/common/scripts/db/dump-db.script.ts",
    "db:prod:restore": "cross-env NODE_ENV=prod ts-node ./src/common/scripts/db/restore-db.script.ts",
    "docker:build:create": "docker-compose -f ./docker-compose.yml up",
    "docker:build:remove": "docker-compose -f ./docker-compose.yml down",
    "docker:build:start": "docker-compose -f ./docker-compose.yml start",
    "docker:build:stop": "docker-compose -f ./docker-compose.yml stop",
    "docker:service:local:create": "docker-compose -f ./docker/development/service/docker-compose.local.yml up",
    "docker:service:local:remove": "docker-compose -f ./docker/development/service/docker-compose.local.yml down",
    "docker:service:local:start": "docker-compose -f ./docker/development/service/docker-compose.local.yml start",
    "docker:service:local:stop": "docker-compose -f ./docker/development/service/docker-compose.local.yml stop",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:create": "yarn run typeorm migration:create",
    "migration:revert": "yarn run typeorm migration:revert -d ./typeOrm.config.ts",
    "migration:run": "yarn run typeorm migration:run -d ./typeOrm.config.ts",
    "migration:local:create": "ts-node ./src/common/scripts/create-migration.script.ts",
    "migration:local:run": "cross-env NODE_ENV=local yarn run typeorm migration:run -d ./typeOrm.config.ts",
    "migration:local:revert": "cross-env NODE_ENV=local yarn run typeorm migration:revert -d ./typeOrm.config.ts",
    "migration:local:drop": "cross-env NODE_ENV=local yarn run db:local:backup && cross-env NODE_ENV=local yarn run typeorm schema:drop -d ./typeOrm.config.ts",
    "migration:local:drop:run": "cross-env NODE_ENV=local yarn run migration:local:drop && yarn run migration:local:run",
    "migration:test:run": "cross-env NODE_ENV=test yarn run typeorm migration:run -d ./typeOrm.config.ts",
    "migration:test:revert": "cross-env NODE_ENV=test yarn run typeorm migration:revert -d ./typeOrm.config.ts",
    "migration:test:drop": "cross-env NODE_ENV=test yarn run db:test:backup && cross-env NODE_ENV=test yarn run typeorm schema:drop -d ./typeOrm.config.ts",
    "migration:test:drop:run": "cross-env NODE_ENV=test yarn run migration:test:drop && yarn run migration:test:run",
    "migration:dev:run": "cross-env NODE_ENV=dev yarn run typeorm migration:run -d ./typeOrm.config.ts",
    "migration:dev:revert": "cross-env NODE_ENV=dev yarn run typeorm migration:revert -d ./typeOrm.config.ts",
    "migration:dev:drop": "cross-env NODE_ENV=dev yarn run db:dev:backup && cross-env NODE_ENV=dev yarn run typeorm schema:drop -d ./typeOrm.config.ts",
    "migration:dev:drop:run": "cross-env NODE_ENV=dev yarn run migration:dev:drop && yarn run migration:dev:run",
    "migration:uat:run": "cross-env NODE_ENV=uat yarn run typeorm migration:run -d ./typeOrm.config.ts",
    "migration:uat:revert": "cross-env NODE_ENV=uat yarn run typeorm migration:revert -d ./typeOrm.config.ts",
    "migration:uat:drop": "cross-env NODE_ENV=uat yarn run db:uat:backup && cross-env NODE_ENV=uat yarn run typeorm schema:drop -d ./typeOrm.config.ts",
    "migration:uat:drop:run": "cross-env NODE_ENV=uat yarn run migration:uat:drop && yarn run migration:uat:run",
    "migration:prod:run": "cross-env NODE_ENV=prod yarn run typeorm migration:run -d ./typeOrm.config.ts",
    "migration:prod:revert": "cross-env NODE_ENV=prod yarn run typeorm migration:revert -d ./typeOrm.config.ts",
    "migration:prod:drop": "cross-env NODE_ENV=prod yarn run db:prod:backup && cross-env NODE_ENV=prod yarn run typeorm schema:drop -d ./typeOrm.config.ts",
    "migration:prod:drop:run": "cross-env NODE_ENV=prod yarn run migration:prod:drop && yarn run migration:prod:run"
  },
  "dependencies": {
    "@golevelup/ts-jest": "^0.5.6",
    "@nestjs/axios": "^3.1.1",
    "@nestjs/cache-manager": "^2.3.0",
    "@nestjs/common": "^10.4.7",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.4.7",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.5",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.4.15",
    "@nestjs/swagger": "^7.4.2",
    "@nestjs/terminus": "^10.2.3",
    "@nestjs/typeorm": "^10.0.2",
    "@types/multer": "^1.4.12",
    "@types/node-forge": "^1.3.11",
    "axios": "^1.7.7",
    "bcrypt": "^5.1.1",
    "cache-manager": "3.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "compression": "^1.7.5",
    "crypto": "^1.0.1",
    "date-fns": "^4.1.0",
    "dotenv": "^16.4.5",
    "express": "^4.21.0",
    "form-data": "^4.0.1",
    "husky": "^9.1.7",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "multer": "^1.4.5-lts.1",
    "nanoid": "^3.3.7",
    "nestjs-typeorm-paginate": "^4.0.4",
    "node-forge": "^1.3.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-oauth2": "^1.8.0",
    "pg": "^8.13.0",
    "reflect-metadata": "^0.2.2",
    "rimraf": "^6.0.1",
    "rxjs": "^7.8.1",
    "sql": "^0.78.0",
    "typeorm": "^0.3.20",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.2",
    "@types/jwt-decode": "^3.1.0",
    "@types/node": "^20.3.1",
    "@types/passport-oauth2": "^1.4.17",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "bestzip": "^2.2.1",
    "cpx": "^1.5.0",
    "cross-env": "^7.0.3",
    "css-loader": "^7.1.2",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "jest-html-reporter": "^3.10.2",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "style-loader": "^4.0.0",
    "supertest": "^7.1.4",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3",
    "webpack": "^5.95.0",
    "webpack-cli": "^5.1.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "testEnvironment": "node"
  }
}
